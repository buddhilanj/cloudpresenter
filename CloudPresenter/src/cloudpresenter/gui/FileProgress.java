/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileProgress.java
 *
 * Created on Dec 12, 2013, 10:30:40 AM
 */

package cloudpresenter.gui;

import cloudpresenter.servers.FileRecieving;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Nawanjana
 */
public class FileProgress extends javax.swing.JFrame {

    private long filesize;
    private double completed;

    /** Creates new form FileProgress */
    public FileProgress(String message, long filesize) {
        initComponents();
        this.setLocationRelativeTo(getRootPane());
        this.filesize = filesize;
        lblStatus.setText(message);
        fileProgressBar.setMaximum(100);
        new Thread(new Runnable() {

            public void run() {
                String changing = ".";
                while(true){
                    try {
                        lblStatus.setText(lblStatus.getText().replaceAll("\\.", "") + changing);
                        Thread.sleep(500);
                        if (changing.length() > 3) {
                            changing=".";
                        } else {
                            changing+=".";
                        }
                    } catch (InterruptedException ex) {
                        Logger.getLogger(FileProgress.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }).start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        fileProgressBar = new javax.swing.JProgressBar();
        btnClose = new javax.swing.JButton();

        lblStatus.setText("Status");

        btnClose.setText("Cancel");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(lblStatus)
                    .addComponent(btnClose, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fileProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed


    public void setVisible(boolean b, FileRecieving f) {
        super.setVisible(b);
        f.notify();
    }



    public void increaseSize(long size){
        completed += size*100d/filesize;
        int intcompleted = (int)completed;
        if((completed - intcompleted)>0.5d){
            intcompleted++;
        }
        fileProgressBar.setValue(intcompleted);
    }


     public void setComplete(){
         fileProgressBar.setValue(fileProgressBar.getMaximum());
         btnClose.setText("Close");
     }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileProgress("hehe",100).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JProgressBar fileProgressBar;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables

}
